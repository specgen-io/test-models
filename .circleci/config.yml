version: 2.1

orbs:
  artifactory: moda/artifactory@0.2.0

parameters:
  specgen-version:
    type: string
    default: 2.0.330

  specgen-version-major:
    type: string
    default: v2

jobs:
  build-test-go:
    working_directory: ~/test-models-go
    docker:
      - image: cimg/go:1.16.4
    steps:
      - checkout
      - run:
          name: Test Go models
          command: |
            cd ./go
            go install github.com/specgen-io/specgen/<<pipeline.parameters.specgen-version-major>>@v<< pipeline.parameters.specgen-version >>
            go generate
            mkdir -p ./test-results
            go install github.com/jstemmer/go-junit-report@v0.9.1
            go test ./... -v 2>&1 | go-junit-report > ./test-results/go-test-report.xml
      - store_test_results:
          path: ./go/test-results
  build-test-ruby:
    working_directory: ~/test-models-ruby
    docker:
      - image: cimg/ruby:3.0.0
    steps:
      - checkout
      - run:
          name: Test Ruby models
          command: |
            cd ./ruby
            bundle inject specgen "= << pipeline.parameters.specgen-version >>"
            bundle install
            rake
      - store_test_results:
          path: ./ruby/test-results
  build-test-superstruct:
    working_directory: ~/test-models-superstruct
    docker:
      - image: cimg/node:14.15.1
    steps:
      - checkout
      - run:
          name: Test Superstruct models
          command: |
            cd ./superstruct
            npm add specgen.io@$SPECGEN_VERSION
            npm install
            npm run codegen
            mkdir -p ./test-results
            export JEST_JUNIT_OUTPUT_DIR=./test-results
            npm run test
      - store_test_results:
          path: ./superstruct/test-results
  build-test-circe:
    environment:
      SPECGEN_VERSION: << pipeline.parameters.specgen-version >>
    working_directory: ~/test-models-circe
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ checksum "build.sbt" }}
      - artifactory/setup-sbt:
          jfrog-server-url: specgen.jfrog.io
          repo-name: sbt
      - run:
          name: Build and test Scala client
          command: |
            cd ./circe
            mkdir -p ./test-results
            sbt -Djunitxml=./test-results test < /dev/null
      - store_test_results:
          path: ./circe/test-results
      - save_cache:
          key: cache-{{ checksum "build.sbt" }}
          paths:
            - ~/.sbt
            - ~/.ivy2

workflows:
  build-test:
    jobs:
      - build-test-go:
          context: specgen
      - build-test-ruby:
          context: specgen
      - build-test-superstruct:
          context: specgen
      - build-test-circe:
          context: specgen